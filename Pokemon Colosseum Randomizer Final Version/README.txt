Credits go to:
God the Father and Jesus Christ
Reclaimer Shawn = Programming, Form Designing, Address Finding
Dark Byte = Bypassing Memory Protection
Zanzer = RNG & Programming
Codejunkies and Ralf = For their AR Codes that allowed me to dissect this game
Nintendo = For Creating the Pokemon Franchise
Dolphin = For Creating the Emulator this game was played on

 - Purpose and Basic Explanation - 
This program allows you to undergo a random playthrough on the game Pokemon Colosseum.
In order for the tool to work properly, close out Dolphin, reopen it, and then immediately load Colosseum up.
After the words "Press Start to continue" pop up, press hook game and choose whatever mods you
want to apply. Whenever Pokemon 1 is sent out, press the 1 button on the keyboard to
sync its health. When Pokemon 2 comes out, just hit the two button a couple of times to sync the health.
Couldn't make it automatic as the update rate is within 1/1000th of a second, so it would only sometimes
sync it and screw the program up the rest of the time. 
EDIT: Regular Mode doesn't need 1 and 2 to sync as the game automatically has the HP set. Every other mode will require the button sync, though.

- OMG It's a Virus! -
Contrary to the belief of some anti-viruses, this program is NOT malicious. It appears to be a virus
by AV defintions for two reasons: It was compiled with Cheat Engine therefore making this a
hacking tool and that it hooks into program memory to rewrite its data. Some Trojans do indeed
inject themselves into a process to carry out malicious intent, and because of the hook, it
immediately sees it as a virus. That is through a process called heuristics. It basically sees what
viruses typically do and asseses bases on that, not by a program's actual activity. It is safe.
But if you do not trust me (which I would understand if you didn't), just don't run the program.

 - For Research Purposes - 
Every pokemon generated by this tool has a Hexadecimal PID of FFFFFFFD (whenever the shiny check-box is enabled). 
This gives it a Bashful nature, makes it a male, and when transfered over to a game that uses PID to calculate IVs, it'll result
in all IVs being 31 except HP at 29. All Trainer ID and Secret ID values are set to 0, resulting in shiny pokemon. 
This program simply takes the OS time in seconds, puts that through a formula, then makes random pokemon 
based off of the random seed generated. This program also sets the EXP value of every pokemon encountered to 
either the maximum amount of EXP they could get at that level or over the maximum by a little bit. 
Pokemon levels in this game aren't determined by shadow flags like they were in Pokemon XD, so levels could become desynced. 
Level desynchronization via having too little EXP to attain a current pokemon's level causes it to never be able to level up and infinitely gain EXP in battle. 
This program sets EXP values to exactly what's needed or a little bit over to make sure this never happens. 
This was done by using the highest EXP value for whatever EXP Group was for that particular level. 
This could result in Pokemon gaining slightly more EXP or leveling up a little more than they're supposed to, 
but it should be within the general range they were caught in. Nonetheless, this is worth the overall effect.
I have also included a Cheat Engine table with the program so you can 
study a little more in-depth what the program does. Also, any value found in Cheat Engine is subtracted by 0x10000 
(probably due to CE seeing Dolphin as a whole and reading its processes as opposed to Dolphin's debugger just reading the game's memory). 
Finally, the game is written in Big Endian format, so if values look odd in Cheat Engine it is due to the program interpreting data in Little Endian. 
Just look at the bytes left to right in Memory Viewer and you should be fine. Also, if you plan on modifying values,
say yes to executing the Lua after the Cheat Table loads. This will not work together with the Randomizer
unless you are using Cheat Engine 6.5.1 (as the version of DBK is different) P.S. DBK is what is used to bypass memory protection.

 - Formulas That Made The Program - 
HP = [(2*Base+IV+(EV/4)*Level)/Level]+Level+10
Any other stat = [[(2*Base+IV+(EV/4)*Level)/Level+5]] * Nature Modifier
(*.9 for hindering Nature, 1 for Neutral, 1.1 for Beneficial Nature)
Zanzer's RNG

- Further Research Into These Topics - 
http://bulbapedia.bulbagarden.net/wiki/Personality_value
http://bulbapedia.bulbagarden.net/wiki/Statistic
http://www.smogon.com/ingame/rng/pid_iv_creation
http://bulbapedia.bulbagarden.net/wiki/Pok%C3%A9mon_data_structure_in_Generation_III
https://bulbapedia.bulbagarden.net/wiki/Experience